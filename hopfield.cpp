#include <iostream>
#include <vector>

using namespace std;

void printArr(vector<vector<int>> v) {
	for (int i = 0; i < 10; i++) {
		for (int j = 0; j < 10; j++) {
			cout << (v[i][j] == 1 ? '#' : ' ');
			//cout << v[i][j] << " ";
		}
		cout << endl;
	}
}



int main() {

	// 10 x 10
	vector<vector<int>> v0 = {
	{ 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 1, 1, 1, 0 ,0 ,0, 0 },
	{ 0, 0, 1, 0, 0, 0, 1 ,0 ,0, 0 },
	{ 0, 1, 0, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 1, 0, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 1, 0, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 1, 0, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 1, 0, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 1, 0, 0, 0, 1 ,0 ,0, 0 },
	{ 0, 0, 0, 1, 1, 1, 0 ,0 ,0, 0 }
	};

	vector<vector<int>> v1 = {
	{ 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 1, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 1, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 1, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 1, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 1, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 1, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 1, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 1, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0 }
	};

	vector<vector<int>> v2 = {
	{ 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 1, 1, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 1, 0, 0, 1, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 1 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 1 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 1 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 0, 1, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 1, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 1, 0, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 1, 1, 1, 1, 1 ,0 ,0, 0 }
	};

	vector<vector<int>> v3 = {
	{ 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 1, 1, 1, 0 ,0 ,0, 0 },
	{ 0, 0, 1, 0, 0, 0, 1 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 1 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 1 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 1, 1, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 1 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 1 ,0 ,0, 0 },
	{ 0, 0, 1, 0, 0, 0, 1 ,0 ,0, 0 },
	{ 0, 0, 0, 1, 1, 1, 0 ,0 ,0, 0 }
	};

	vector<vector<int>> v4 = {
	{ 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 1, 0, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 1, 0, 0, 0, 1 ,0 ,0, 0 },
	{ 0, 0, 1, 0, 0, 0, 1 ,0 ,0, 0 },
	{ 0, 0, 1, 0, 0, 0, 1 ,0 ,0, 0 },
	{ 0, 0, 1, 1, 1, 1, 1 ,1 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 1 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 1 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 1 ,0 ,0, 0 }
	};

	vector<vector<int>> v5 = {
	{ 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 1, 1, 1, 1 ,1 ,0, 0 },
	{ 0, 0, 0, 1, 0, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 1, 0, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 1, 1, 1, 1 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 0, 1, 1, 1, 1 ,0 ,0, 0 }
	};

	vector<vector<int>> v6 = {
	{ 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 1, 1, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 1, 0, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 1, 0, 0, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 1, 0, 0, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 1, 0, 1, 1, 1 ,0 ,0, 0 },
	{ 0, 0, 1, 1, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 1, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 0, 1, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 0, 0, 1, 1, 1 ,0 ,0, 0 }
	};

	vector<vector<int>> v7 = {
	{ 0, 0, 0, 0, 1, 1, 1 ,0 ,0, 0 },
	{ 0, 0, 0, 1, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 1, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 1, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 0 ,1 ,0, 0 }
	};

	vector<vector<int>> v8 = {
	{ 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 1, 1, 1, 1 ,0 ,0, 0 },
	{ 0, 0, 1, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 1, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 1, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 0, 1, 1, 1, 1 ,0 ,0, 0 },
	{ 0, 0, 1, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 1, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 1, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 0, 1, 1, 1, 1 ,0 ,0, 0 }
	};

	vector<vector<int>> v9 = {
	{ 0, 0, 0, 0, 0, 1, 1 ,1 ,0, 0 },
	{ 0, 0, 0, 0, 1, 0, 0 ,0 ,1, 0 },
	{ 0, 0, 0, 1, 0, 0, 0 ,0 ,1, 0 },
	{ 0, 0, 0, 0, 1, 0, 0 ,1 ,1, 0 },
	{ 0, 0, 0, 0, 0, 1, 1 ,0 ,1, 0 },
	{ 0, 0, 0, 0, 0, 0, 0 ,0 ,1, 0 },
	{ 0, 0, 0, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 0 ,1 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 1 ,0 ,0, 0 }
	};

	// 하나씩 출력
	vector<vector<vector<int>>> numV{v0, v1, v2, v3, v4, v5, v6, v7, v8, v9};
	
	vector<vector<int>> weightV(100, vector<int>(100, 0));

	vector<int> colV(100);
	
	/*for (auto v : numV) {
		printArr(v);
		cout << "+++++++++++++++++" << endl;
	}
	return 0;*/


	// 가중치 행렬 계산
	for (int v = 0; v < numV.size();v++) {
		if (v == 1 || v == 3) {
			// 2차원 행렬을 1차원 행렬로 변환
			for (int i = 0; i < 10; i++) {
				for (int j = 0; j < 10; j++) {
					colV[(10 * i) + j] = (numV[v][i][j] * 2) - 1;
				}
			}
			// 변환된 2차원 행렬과 그 역행렬을 곱하여 가중치 행렬에 더함.
			for (int i = 0; i < 100; i++) {
				for (int j = 0; j < 100; j++) {
					if (i != j) weightV[i][j] += (colV[i] * colV[j]);
				}
			}
		}
	}
	
	//printArr(weightV);
	// 입력 패턴
	vector<vector<int>> inputV = {
	{ 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0 },
	{ 0, 1, 0, 0, 1, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 1, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 1, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 1, 0, 1 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 1, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 1, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 1, 0, 0 ,0 ,0, 0 },
	{ 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0 }
	};
	
	// 입력 패턴에 대한 학습 패턴 연상
	printArr(inputV);
	cout << "++++++++++++++++++++++++++++++++++" << endl;
	
	for (int p = 0; p < 1000; p++) {
		for (int a = 0; a < 100; a++) {
			int sum = 0;
			for (int i = 0; i < 10; i++) {
				for (int j = 0; j < 10; j++) {
					sum += inputV[i][j] * weightV[a][(i * 10) + j];
				}
			}
			//cout << sum << endl;
			if (sum > 0) {
				inputV[a / 10][a % 10] = 1;
			}
			else if (sum < 0) {
				inputV[a / 10][a % 10] = 0;
			}
		}
		for (auto v : numV) {
			int a, b;
			for (a = 0; a < v.size(); a++) {
				for (b = 0; b < v.size(); b++) {
					if (v[a][b] != inputV[a][b]) break;
				}
			}
			if (a == v.size() && b == v.size()) {
				printArr(inputV);
				return 0;
			}
		}
		//printArr(inputV);
	}
	cout << "실패" << endl;
	printArr(inputV);
	cout << "++++++++++++++++++++++++++++++++++" << endl;
	return 0;
}